local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local VirtualUser = game:GetService("VirtualUser")

local player = Players.LocalPlayer
local maximoMensajeMostrado = false

local SafeZone = Instance.new("Part")
SafeZone.Parent = Workspace
SafeZone.Size = Vector3.new(50, 2, 50)
SafeZone.CFrame = CFrame.new(99999, 99999, 99999)
SafeZone.Anchored = true

local function interactuarConZenkai()
    local playerGui = player:WaitForChild("PlayerGui")
    local zenkaiButton = playerGui.PlayerInterface.Center.Zenkai.Info:FindFirstChild("Zenkai")

    if zenkaiButton and zenkaiButton:FindFirstChild("Button") then
        GuiService.SelectedObject = zenkaiButton.Button
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
        task.wait()
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        maximoMensajeMostrado = true
    end
end

-- Función principal para verificar barras y estados
local function verificarBarras()
    local playerGui = player:WaitForChild("PlayerGui")
    local zenkaiUI = playerGui:WaitForChild("PlayerInterface").Center.Zenkai.Container.Progress
    local Center = playerGui:WaitForChild("PlayerInterface").Center
    local prev1, prev2
    local barras = {
        ataque = zenkaiUI.AttackBar.Bar.Slider,
        agilidad = zenkaiUI.AgilityBar.Bar.Slider,
        energia = zenkaiUI.KiBar.Bar.Slider,
        defensa = zenkaiUI.DefenseBar.Bar.Slider
    }

    local estados = {
        ataqueMaximo = barras.ataque.Size == UDim2.new(1, 0, 1, 0),
        agilidadMaxima = barras.agilidad.Size == UDim2.new(1, 0, 1, 0),
        energiaMaxima = barras.energia.Size == UDim2.new(1, 0, 1, 0),
        defensaMaxima = barras.defensa.Size == UDim2.new(1, 0, 1, 0)
    }

    local energy = workspace[player.Name].State.Energy.Value
    local maxEnergy = workspace[player.Name].State.MaxEnergy.Value
if not Center.Visible then
Center.Visible = true
end
if not estados.ataqueMaximo then
        getgenv().AutoAttack = true
        maximoMensajeMostrado = false
        GuiService.SelectedObject = nil
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    elseif not estados.agilidadMaxima then
        getgenv().AutoAttack = true
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    elseif not estados.energiaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = true
        getgenv().AutoDefense = false
    elseif not estados.defensaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = true
   elseif estados.ataqueMaximo and estados.agilidadMaxima and estados.energiaMaxima and estados.defensaMaxima then
        interactuarConZenkai()
    end

    -- Manejo de energía
    if energy <= 20 then
        prev1 = getgenv().AutoEnergy
        prev2 = getgenv().AutoDefense
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
        wait(2)
        if getgenv().AutoFarm or getgenv().AutoEnergy or getgenv().AutoDefense then
        VirtualInputManager:SendKeyEvent(true, "C", false, game)
        end
    elseif energy >= maxEnergy then
        VirtualInputManager:SendKeyEvent(false, "C", false, game)
        wait(2)
        getgenv().AutoEnergy = prev1
        getgenv().AutoDefense = prev2
    end
end

-- Evitar expulsión por inactividad
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Configuración de la interfaz
local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})

local maintab = win:Tab('Main')
local uitab = win:Tab('UI')

uitab:Button('Destroy GUI', function()
    win:Exit()
end)

maintab:Toggle('Auto Farming', function(v)
    getgenv().AutoFarm = v
    if not v then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        VirtualInputManager:SendKeyEvent(false, "Q", false, game)
        VirtualInputManager:SendKeyEvent(false, "C", false, game)
        getgenv().AutoDefense = false
    end
end)

maintab:Button('Zona Segura', function()
     player.Character.HumanoidRootPart.CFrame = SafeZone.CFrame + Vector3.new(0, 2, 0)
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            pcall(verificarBarras)
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoAttack then
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoEnergy then
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoDefense then
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
        end
    end
end)
