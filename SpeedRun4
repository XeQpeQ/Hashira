local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local character = player.Character or player.CharacterAdded:Wait()
local gui, mainFrame, originalSize, isExpanded

local function toggleGUIVisibility(visible)
    if gui then
        gui.Enabled = visible
    end
end

local function toggleGUISize(expand)
    if mainFrame and originalSize then
        if expand then
            mainFrame.Size = originalSize
        else
            mainFrame.Size = UDim2.new(0, 150, 0, 100) -- Modificar el tamaño según sea necesario
        end
        isExpanded = expand
    end
end

local bb = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
    ab.Text = "Roblox intentó expulsarte, pero lo evité"
    wait(2)
    ab.Text = "Estado: Activo"
end)

local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})
local maintab = win:Tab('Main Worlds')
local Bonustab = win:Tab('Bonus Worlds')
local uitab = win:Tab('UI')

uitab:Button('Destroy Gui', function()
    win:Exit()
end)

maintab:Toggle('AutoClassic', function(v)
    getgenv().AutoLvl = v
end)
maintab:Toggle('AutoForbidden', function(v)
    getgenv().AutoForbidden = v
end)
Bonustab:Toggle('AutoDonut', function(v)
    getgenv().AutoDonut = v
end)
Bonustab:Toggle('AutoMoon', function(v)
    getgenv().AutoMoon = v
end)
Bonustab:Toggle('AutoChromium', function(v)
    getgenv().AutoChromium  = v
end)
Bonustab:Toggle('AutoCosmic', function(v)
    getgenv().AutoCosmic = v
end)
Bonustab:Toggle('AutoCybernaut', function(v)
    getgenv().AutoCybernaut = v
end)
Bonustab:Toggle('AutoBirch', function(v)
    getgenv().AutoBirch = v
end)
Bonustab:Toggle('AutoPeach', function(v)
    getgenv().AutoPeach = v
end)

local RunService = game:GetService("RunService")

spawn(function() 
    RunService.Stepped:Connect(function()
        
        if getgenv().AutoLvl then
            
            local levels = game:GetService("Workspace").Levels

            local level = workspace:WaitForChild("Levels"):FindFirstChild(tostring(i))

            for i,v in pairs(levels:GetChildren()) do
                if v.Name:match("1") and v:FindFirstChild("MaterialVariants") then
                    v.Name = "OtherThing"
                end
            end
            
            for i = 1, 30 do
                if i == 30 then
                    game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                    task.wait(3)
                    local args = {
                        [1] = "lc",
                        [2] = "Re1"
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("State"):FireServer(unpack(args))
                    
                    for i,v in pairs(levels:GetChildren()) do
                        if v.Name:match("1") and v:FindFirstChild("MaterialVariants") then
                            v.Name = "OtherThing"
                        end
                    end
                end
                
                if level then
                local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints2 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                     if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints2.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                task.wait(1.2)
                end
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoForbidden then
            for i = 1, 8 do
                local level = workspace:WaitForChild("Levels"):FindFirstChild(tostring(i))
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints2 = level1:WaitForChild("Checkpoints"):WaitForChild("2")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints2.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoDonut then
            for i = 1, 30 do
                local level = workspace:WaitForChild("Levels"):FindFirstChild(tostring(i))
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints2 = level1:WaitForChild("Checkpoints"):WaitForChild("2")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints2.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoMoon then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level
                if i > 5 then
                    level = levels:FindFirstChild("Model")
                else
                    level = levels:FindFirstChild(tostring("Level".. i))
                end
                
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
                local args = {
                    [1] = "lc",
                    [2] = "Re1"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("State"):FireServer(unpack(args))
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoChromium then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level = levels:FindFirstChild(tostring("NormalLevel".. i))
                    
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoCosmic then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level = levels:FindFirstChild(tostring("NormalLevel".. i))
                    
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoCybernaut then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level
                if i > 12 then
                    level = levels:FindFirstChild("correct")
                else
                    level = levels:FindFirstChild("Model")
                end
                    
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoBirch then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level
                if i > 28 then
                    level = levels:FindFirstChild("birch".. i)
                else
                    level = levels:FindFirstChild("Model")
                end
                    
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
            end
        end
    end)
end)
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AutoPeach then
            local levels = game:GetService("Workspace").Levels
            
            for i = 1, 30 do
                local level
                if i > 28 then
                    level = levels:FindFirstChild(tostring(i))
                else
                    level = levels:FindFirstChild("Model")
                end
                    
                if level then
                    local map = level:WaitForChild("Map")
                    local level1 = map:WaitForChild("Levels"):WaitForChild("1")
                    local collectibles = level1:WaitForChild("Collectibles")
                    local checkpoints3 = level1:WaitForChild("Checkpoints"):WaitForChild("3")
                    local collectibleModel = collectibles:FindFirstChild("Model")
                    
                    if not collectibleModel then
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(checkpoints3.Position))
                    else
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(collectibleModel:WaitForChild("Part").Position))
                    end
                    task.wait(1.2)
                end
            end
            
            if level then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(levels["30"].Map.Levels["1"].Checkpoints["3"].Position))
                task.wait(3)
            end
        end
    end)
end)
