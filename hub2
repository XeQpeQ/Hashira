LPH_JIT_MAX = function(...) return(...) end;
getrenv()._G.handle_irregular = nil
getrenv()._G.cuasdamsndasdasd = nil

_G.cuasdamsndasdasd = function()
	return
end

getrenv().tick = function()
	return 2000
end

_G.handle_irregular = function()
	return false
end

repeat wait() until game:IsLoaded()
local skill_module = require(game:GetService("ReplicatedStorage").Modules.Server["Skills_Modules_Handler"])

hookfunction(skill_module.Kick, function()
	return nil
end);

local anti_cheat1 = game:GetService("Players").LocalPlayer.PlayerScripts["Small_Scripts"]["Client_Global_utility"]
local anti_cheat2 = game:GetService("Players").LocalPlayer.PlayerScripts["Small_Scripts"]["client_global_delete_script"]

hookfunction(anti_cheat1.GetPropertyChangedSignal, function()
	return
end)

hookfunction(anti_cheat2.GetPropertyChangedSignal, function()
	return
end)

anti_cheat1.Disabled = true
anti_cheat2.Disabled = true

local Namecall
Namecall = hookmetamethod(game, '__namecall', function(self, ...)
	local Args = {...}
	local method = getnamecallmethod()

	if method == 'FireServer' and string.find(self.Name, 'mod') then 
		return 
	end

	if method == 'InvokeServer' and self.Name == 'reporthackerasdasd' then 
		return 
	end

	if method == 'FireServer' and self.Name == 'To_Server_commends' then 
		return
	end

	if method:lower() == 'kick' then 
		return 
	end

	return Namecall(self, ...)
end)

local hook
hook = hookmetamethod(game, "__namecall", function(self, ...)
	args = {...}

	if getnamecallmethod() == "FireServer" and #args == 2 and type(args[1]) == "boolean" then
		return task.wait(9e9)
	end

	return hook(self, ...)
end)

getgenv().tweenspeed = 300
local LP = game.Players.LocalPlayer
local client = game:GetService("Players").LocalPlayer
local Plr = game:GetService("Players").LocalPlayer
local Data = game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name]
local BossessTable = {"Zoku", "Kaden", "Sabito", "Zanegutsu Kuuchie", "Shiron", "Sanemi", "Giyu", "Yahaba", "Susamaru", "Slasher", "Nezuko", "Snow Trainee", "Sound Trainee", "Akeza", "Douma", "Enme", "Renpeke", "Inosuke", "Muichiro Tokito", "Rengoku", "Swampy", "Tengen"}
local TrainersCF = {
	["Water Trainer"] = CFrame.new(705.209229, 261.426819, -2409.51587, -0.566798735, -5.48522401e-08, -0.641887605, -7.38932258e-08, 1, 2.8182352e-09, 0.641887605, 4.95921633e-08, -0.566798735),
	["Insect Trainer"] = CFrame.new(2873.81177, 316.95871, -3917.9397, 0.40715313, 4.81208531e-08, 0.91335988, -8.85969982e-08, 1, -1.31911939e-08, -0.91335988, -7.55501048e-08, 0.40715313),
	["Thunder Trainer"] = CFrame.new(-322.369507, 426.857788, -2384.4021, 0.361198723, -4.49157973e-08, -0.932488859, 1.14233451e-07, 1, -3.91942434e-09, 0.932488859, -1.05105727e-07, 0.361198723),
	["Wind Trainer"] = CFrame.new(1792.31458, 334.338989, -3521.31104, 0.862527311, -5.19402583e-08, -0.506010473, 8.30083167e-08, 1, 3.88463874e-08, 0.506010473, -7.55091492e-08, 0.862527311)
}

local Villages = {
	["Zapiwara Mountain"] = CFrame.new(-365.617981, 425.857422, -2303.92285, -0.351566792, -6.70503529e-13, 0.93616277, 9.77098068e-13, 1, 1.08316502e-12, -0.93616277, 1.2955277e-12, -0.351566792),
	["Waroru Cave"] = CFrame.new(683.164062, 261.426819, -2401.41797, 0.137014925, -3.46316149e-08, 0.990568995, 6.38769482e-09, 1, 3.4077793e-08, -0.990568995, 1.65828595e-09, 0.137014925),
	["Slasher Demon"] = CFrame.new(-485.866608, 274.511871, -3314.98169, -0.79503566, -1.09233929e-08, -0.606562674, 1.19430055e-09, 1, -1.95740775e-08, 0.606562674, -1.62865081e-08, -0.79503566),
	["Ushumaru Village"] = CFrame.new(-90.0373688, 354.723511, -3170.00439, 0.817297578, -1.0121405e-08, 0.576215804, 3.12666586e-08, 1, -2.6782951e-08, -0.576215804, 3.99059843e-08, 0.817297578),
	["Ouwbayashi Home"] = CFrame.new(1593.49072, 315.983917, -4618.15088, -0.795035839, -1.09234e-08, -0.606562734, 1.19429622e-09, 1, -1.95740828e-08, 0.606562734, -1.62865081e-08, -0.795035839),
	["Kabiwaru Village"] = CFrame.new(2037.20203, 315.908813, -2956.77539, -0.795035839, -1.09234e-08, -0.606562734, 1.19429622e-09, 1, -1.95740828e-08, 0.606562734, -1.62865081e-08, -0.795035839),
	["Zapiwara Cave"] = CFrame.new(-8.2838707, 275.944641, -2414.72607, -0.795035779, -1.09233964e-08, -0.606562555, 1.19429289e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
	["Dangerous Woods"] = CFrame.new(4061.43677, 342.289581, -3928.90332, -0.795035839, -1.09233973e-08, -0.606562614, 1.19429444e-09, 1, -1.95740775e-08, 0.606562614, -1.62865064e-08, -0.795035839),
	["Final Selection"] = CFrame.new(5200.76709, 365.949982, -2425.61646, -0.795035779, -1.09233964e-08, -0.606562555, 1.19429289e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
	["Kiribating Village"] = CFrame.new(-40.3280869, 282.282745, -1623.75159, -0.795035839, -1.09233991e-08, -0.606562614, 1.19429266e-09, 1, -1.95740792e-08, 0.606562614, -1.62865046e-08, -0.795035839),
	["Butterfly Mansion"] = CFrame.new(3022.90869, 316.075623, -3928.17261, -0.795035779, -1.09233982e-08, -0.606562555, 1.19429144e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
	["Abubu Cave"] = CFrame.new(1044.44873, 276.190704, -3483.0647, -0.795035839, -1.09233991e-08, -0.606562614, 1.19429266e-09, 1, -1.95740792e-08, 0.606562614, -1.62865046e-08, -0.795035839),
}
local VIM = game:GetService("VirtualInputManager")

local function GetHuman()
	local h = LP.Character
	h = h and (h:FindFirstChild("Humanoid") or h:FindFirstChildWhichIsA("Humanoid"))
	return h or workspace.CurrentCamera.CameraSubject
end

local function SkillBind(bind)
	pcall(function()
		VIM:SendKeyEvent(true,bind,false,game)
		task.wait()
		VIM:SendKeyEvent(false,bind,false,game)
		wait(.2)
	end)
end

local function GetDistance(Endpoint)
	if typeof(Endpoint) == "Instance" then
		Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
	elseif typeof(Endpoint) == "CFrame" then
		Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
	end
	local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
	return Magnitude
end
function Tween(Endpoint)
	if typeof(Endpoint) == "Instance" then
		Endpoint = Endpoint.CFrame
	end
	local TweenFunc = {}
	local Distance = GetDistance(Endpoint)
	local TweenInfo = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance/getgenv().tweenspeed, Enum.EasingStyle.Linear), {CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1,0,0), math.rad(0))})
	TweenInfo:Play()
	function TweenFunc:Cancel()
		TweenInfo:Cancel()
		return false
	end
	if Distance <= 100 then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
		TweenInfo:Cancel()
		return false
	end
	return TweenFunc
end
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = "Hashira Hub",
	LoadingTitle = "Project Slayers",
	LoadingSubtitle = "Loading...",
})

-- >> Tabs
local MainTab = Window:CreateTab("Main", 11956062417)
local MiscTab = Window:CreateTab("Misc", 2714338256)
local ExtraTab = Window:CreateTab("Extra", 794492571)
local SettingsTab = Window:CreateTab("Settings", 13458899005)
-- >> Sections
local AutofarmSection = MainTab:CreateSection("Farming")
local Toggle = MainTab:CreateToggle({
	Name = "AutoFarmAllBosses",
	CurrentValue = false,
	Flag = "AF", 
	Callback = function(Value)
		getgenv().AllBosses = Value
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "Auto Collect Chest",
	CurrentValue = false,
	Flag = "AutoCollectChestToggle", 
	Callback = function(value)
		getgenv().AutoCollectChest = value
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "KillAura",
	CurrentValue = false,
	Flag = "KillAuraToggle", 
	Callback = function(Value)
		getgenv().killaura = Value
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "AutoBlock",
	CurrentValue = false,
	Flag = "AutoBlockToggle", 
	Callback = function(Value)
		getgenv().AB = Value
	end,
})
local Button = MainTab:CreateButton({
	Name = "God Mode(Only in Kamado)",
	Callback = function()
		game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(true)
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "God Mode2(Only in Akaza)",
	CurrentValue = false,
	Flag = "GodMode2", 
	Callback = function(t)
		getgenv().GodMode2 = t
	end,
})
local AutofarmSettingSection = MainTab:CreateSection("Farming Settings")
getgenv().Method = "Combat"
--local Dropdown = MainTab:CreateDropdown({
	--Name = "KillAura Method(In process)",
	--Options = {},
	--CurrentOption = {""},
	--MultipleOptions = false,
	--Flag = "Dropdown2",
	--Callback = function(Option)
		--Method = Option
	--end,
--})
getgenv().FarmMethod = "Behind"
--local Dropdown = MainTab:CreateDropdown({
	--Name = "AutoFarm Method(In process)",
	--Options = {"Above","Below","Behind"},
	--CurrentOption = {"None"},
	--MultipleOptions = false,
	--Flag = "AutoFarmMethod", 
	--Callback = function(v)
		--FarmMethod = v
	--end,
--})
--local Slider = MainTab:CreateSlider({
	--Name = "AutoFarm Speed",
	--Range = {0, 300},
	--Increment = 10,
	--Suffix = "Tween",
	--CurrentValue = 1,
	--Flag = "Slider2",
	--Callback = function(self)
		--getgenv().tweenspeed = self
	--end,
--})
getgenv().Distance = 5
--local Slider = MainTab:CreateSlider({
	--Name = "AutoFarm Distance ",
	--Range = {0, 20},
	--Increment = 1,
	--Suffix = "Distance",
	--CurrentValue = 1,
	--Flag = "Slider1",
	--Callback = function(selfd)
		--getgenv().Distance = selfd
	--end,
--})
local Toggle = MainTab:CreateToggle({
	Name = "Use Skills",
	CurrentValue = false,
	Flag = "Toggle2", 
	Callback = function(t)
		getgenv().AutoUseSkills = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "Z",
	CurrentValue = false,
	Flag = "Toggle3", 
	Callback = function(t)
		getgenv().Z = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "X",
	CurrentValue = false,
	Flag = "Toggle4", 
	Callback = function(t)
		getgenv().X = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "C",
	CurrentValue = false,
	Flag = "Toggle5", 
	Callback = function(t)
		getgenv().C = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "V",
	CurrentValue = false,
	Flag = "Toggle6", 
	Callback = function(t)
		getgenv().V = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "B",
	CurrentValue = false,
	Flag = "Toggle7", 
	Callback = function(t)
		getgenv().B = t
	end,
})
local Toggle = MainTab:CreateToggle({
	Name = "N",
	CurrentValue = false,
	Flag = "Toggle8", 
	Callback = function(t)
		getgenv().N = t
	end,
})
local CharacterSection = MiscTab:CreateSection("Character")
local Slider = MiscTab:CreateSlider({
	Name = "Walkspeed",
	Range = {0, 100},
	Increment = 10,
	Suffix = "Speed",
	CurrentValue = 10,
	Flag = "WalkspeedSlider",
	Callback = function(v)
		getgenv().WalkSpeedValue = v
	end,
})
local Slider = MiscTab:CreateSlider({
	Name = "JumpPower",
	Range = {0, 100},
	Increment = 10,
	Suffix = "Jump",
	CurrentValue = 10,
	Flag = "JumpSlider", 
	Callback = function(v)
		getgenv().JumpPowerEnabled = v
	end,
})

local Toggle = MiscTab:CreateToggle({
	Name = "Enable WalkSpeed",
	CurrentValue = false,
	Flag = "EWToggle", 
	Callback = function(t)
		getgenv().WalksSpeedEnabled = t
	end,
})
local Toggle = MiscTab:CreateToggle({
	Name = "Enable JumpPower",
	CurrentValue = false,
	Flag = "EWToggle", 
	Callback = function(t)
		getgenv().JumpPowerEnabled = t
	end,
})
local Toggle = MiscTab:CreateToggle({
	Name = "Auto Blow",
	CurrentValue = false,
	Flag = "AutoBlowToggle", 
	Callback = function(v)
		getgenv().AutoGourd = v
	end,
})
local FunctionsSection = ExtraTab:CreateSection("Extra Functions")
local SettingsSections = SettingsTab:CreateSection("Settings")
-- Auto Collect Chest

spawn(function()
	while task.wait() do
		if AutoCollectChest then
			do for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do if v.Name == "Loot_Chest" then for _, c in pairs(v:FindFirstChild("Drops"):GetChildren()) do if game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name].Inventory.Items:FindFirstChild(c.Name) then if game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name].Inventory.Items:FindFirstChild(c.Name):FindFirstChild("CanHaveMoreThenOne").Value == true then local args = { [1] = c.Name, } v["Add_To_Inventory"]:InvokeServer(unpack(args)) delay(0.5, function() c:Destroy() end) end else local args = { [1] = c.Name, } v["Add_To_Inventory"]:InvokeServer(unpack(args)) delay(0.5, function() c:Destroy() end) end end end end 
			end
		end
	end
end)

-- God Mode 2
spawn(function()
	while task.wait() do
		if getgenv().GodMode2 then
			local args = {[1] = "skil_ting_asd",[2] = game:GetService("Players").LocalPlayer,[3] = "akaza_bda_compass_needle",[4] = 1}game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
		end
	end
end)

-- Auto gourd
task.spawn(function()
	while task.wait() do
		if getgenv().AutoGourd then
			if getgenv().Gourd == "Big Gourd" and Data.Yen.Value >= 700 then
				for i = 1,6 do 
					task.wait()
					game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().Gourd, Data.Yen, Data.Inventory)
					wait(1)
					repeat task.wait()
						local GourdFound = Plr.Backpack:WaitForChild(getgenv().Gourd) or Plr.Character:WaitForChild(getgenv().Gourd)
						game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
					until not Plr.Backpack:FindFirstChild(getgenv().Gourd)
				end
			elseif getgenv().Gourd == "Medium Gourd" and Data.Yen.Value >= 450 then
				for i = 1,5 do 
					task.wait()
					game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().Gourd, Data.Yen, Data.Inventory)
					task.wait(1)
					repeat task.wait()
						local GourdFound = Plr.Backpack:WaitForChild(getgenv().Gourd) or Plr.Character:WaitForChild(getgenv().Gourd)
						game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
					until not Plr.Backpack:FindFirstChild(getgenv().Gourd)
				end
			elseif getgenv().Gourd == "Small Gourd" and Data.Yen.Value >= 200 then
				for i = 1,6 do
					task.wait()
					game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().Gourd, Data.Yen, Data.Inventory)
					wait(1)
					repeat task.wait()
						local GourdFound = Plr.Backpack:WaitForChild(getgenv().Gourd) or Plr.Character:WaitForChild(getgenv().Gourd)
						game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
					until not Plr.Backpack:FindFirstChild(getgenv().Gourd)
				end
			end
		end
	end
end)

-- TP Trainer and Village

spawn(function()
	while task.wait() do
		pcall(function()
			if TPtoTrainer then
				if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					antifall4 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
					antifall4.Velocity = Vector3.new(0, 0, 0)
					antifall4.MaxForce = Vector3.new(9e9, 9e9, 9e9)
				elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					repeat task.wait()
						if GetDistance(TrainersCF[TrainerSelected]) < 50 and GetDistance(TrainersCF[TrainerSelected]) < 150 then
							if TweenFa then
								TweenFa:Cancel()
								wait(.1)
							end
							LP.Character.HumanoidRootPart.CFrame = TrainersCF[TrainerSelected]
						else
							TweenFa = Tween(TrainersCF[TrainerSelected])
						end
					until not TPtoTrainer
				end
			else
				antifall4:Destroy()
			end
			if TPtoVillage then
				if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					antifall5 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
					antifall5.Velocity = Vector3.new(0, 0, 0)
					antifall5.MaxForce = Vector3.new(9e9, 9e9, 9e9)
				elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					repeat task.wait()
						if GetDistance(Villages[AreaSelected]) < 50 and GetDistance(Villages[AreaSelected]) < 150 then
							if TweenFa then
								TweenFa:Cancel()
								wait(.1)
							end
							LP.Character.HumanoidRootPart.CFrame = Villages[AreaSelected]
						else
							TweenFa = Tween(Villages[AreaSelected])
						end
					until not TPtoVillage
				end
			else
				antifall5:Destroy()
			end
		end)
	end
end)

--WalkSpeed and JumpPower

spawn(function()
	while task.wait() do
		if getgenv().WalksSpeedEnabled then
			local h = GetHuman()
			local oldws = h and h.WalkSpeed
			if oldws then
				pcall(function()
					h.WalkSpeed = getgenv().WalkSpeedValue or oldws or 16
					while task.wait() and getgenv().WalksSpeedEnabled do
						h.WalkSpeed = getgenv().WalkSpeedValue or oldws or 16
					end
				end)
				h.WalkSpeed = oldws or 16
			end
		end
	end
end)

spawn(function()
	while task.wait() do
		if getgenv().JumpPowerEnabled then
			local h = GetHuman()
			local oldjp = h and h.JumpPower
			if oldjp then
				pcall(function()
					h.JumpPower = getgenv().JumpPowerValue or oldjp or 50
					while task.wait() and getgenv().JumpPowerEnabled do
						h.JumpPower = getgenv().JumpPowerValue or oldjp or 50
					end
				end)
				h.JumpPower = oldjp or 50
			end
		end
	end
end)



--No Cooldown Moves
oldindex = hookmetamethod(game, "__index", function(index, value)
	if tostring(index) == "LastUsed" and getgenv().NoCdMoves then
		return 0
	end
	return oldindex(index, value)
end)


-- Breathing and Stamina
spawn(function()
	while task.wait() do
		if getgenv().InfStamina then
			getrenv()._G.AddStamina("gpthebest", 50)
		end
	end
end)

spawn(function()
	while task.wait() do
		if getgenv().InfBreathing then
			getrenv()._G.AddBreath("gpthebest", 50)
		end
	end
end)
--Auto Block
spawn(function()
	while task.wait() do
		if getgenv().AB then
			local args = {[1] = "add_blocking",[3] = 11565.6265117,[4] = game:GetService("ReplicatedStorage").PlayerValues[game.Players.LocalPlayer.Name],[5] = math.huge}game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
		else
			local args = {[1] = "remove_blocking",[2] = game:GetService("ReplicatedStorage"):WaitForChild("PlayerValues"):WaitForChild("GamerSuperpro_YT3")}game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S_"):InvokeServer(unpack(args))
		end
	end
end)
local function attack(method)
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
	game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
end
local function attack2(method)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 26, "ground_slash")
task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 26, "ground_slash")
task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 26, "ground_slash")
task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 26, "ground_slash")
task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 26, "ground_slash")
task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 51, "ground_slash")
end
local attackMethods = {
	["Combat"] = 'fist_combat',
	["Sword"] = 'Sword_Combat_Slash',
	["Scythe"] = 'Scythe_Combat_Slash',
	["Claw"] = 'claw_Combat_Slash'
}
-- // Kill Aura \\ -- 
task.spawn(function()
	while task.wait() do
		pcall(function()
			if killaura then
				attack2(attackMethods[Method])
				task.wait(2)
			end
		end)
	end
end)
-- Skills
spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().Z and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("Z")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)


spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().X and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("X")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)

spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().C and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("C")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)

spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().V and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("V")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)

spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().B and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("B")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)

spawn(function()
	while task.wait() do
		pcall(function()
			if SkillActive then
				if AutoUseSkills and getgenv().N and not UsingSkill then
					for i = 1,7 do
						UsingSkill = true
						SkillBind("N")
					end              
					UsingSkill = false
				end
			end
		end)
	end
end)
--Farm Method
spawn(function()
	while wait() do
		pcall(function()
			SkillActive = AutoUseSkills and (FarmBoss and NearestMobs) or AutoUseSkills and (FarmQuest and NearestMobs) or AutoUseSkills and (FarmMob and NearestMobs) or AutoUseSkills and (AllBosses and NearestMobs)
			if FarmMethod == "Above" then
				FarmModes = CFrame.new(0,getgenv().Distance,0) * CFrame.Angles(math.rad(-90),0,0) 
			elseif FarmMethod == "Below" then
				FarmModes = CFrame.new(0,-getgenv().Distance,0) * CFrame.Angles(math.rad(90),0,0)
			elseif FarmMethod == "Behind" then
				FarmModes = CFrame.new(0,0,getgenv().Distance)
			end
			for i,v in pairs(LP.PlayerGui.MainGuis.Items.Scroll:GetChildren()) do
				Insert = true
				if v.ClassName == "Frame" and v.Name ~= "Health Elixir" and v.Name ~= "Health Regen Elixir" and v.Name ~= "Stamina Elixir" and v.Name ~= "Bandage" then
					for i,v2 in pairs(invTable) do if v2 == v.Name then Insert = false end end
					if Insert == true then table.insert(invTable, v.Name) end
				end
			end
		end)
	end
end)
spawn(function()
	game:GetService("RunService").Stepped:Connect(function()
		if getgenv().AllBosses or getgenv().ADungeon or TPtoVillage or TPtoTrainer or getgenv().GotoMuzan or FarmBoss then
			for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false    
				end
				if v:IsA("Humanoid") then
					v:ChangeState(11)
				end
			end
		end
	end)
end)
-- Auto Farm boss
spawn(function()
	while task.wait() do
		pcall(function()
			if getgenv().AllBosses then
				if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					antifall3 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
					antifall3.Velocity = Vector3.new(0, 0, 0)
					antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
				elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					for i, v in pairs(game:GetService("Workspace").Mobs:GetDescendants()) do
						if v:IsA("Model") and v:FindFirstChild("Humanoid") then
							if v.Humanoid.Health > 0 then
								repeat task.wait()
									if GetDistance(v:GetModelCFrame() * FarmModes) < 25 and GetDistance(v:GetModelCFrame() * FarmModes) < 150 then
										if TweenFa then
											TweenFa:Cancel()
											wait(.1)
										end
										LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame() * FarmModes
									else
										TweenFa = Tween(v:GetModelCFrame() * FarmModes)
									end
									if v.Humanoid.Health > 0 and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and GetDistance(v:GetModelCFrame() * FarmModes) < 10 then
										NearestMobs = true
									elseif v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") and GetDistance(v:GetModelCFrame() * FarmModes) > 10 then
										NearestMobs = false
									end
								until not getgenv().AllBosses or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
								NearestMobs = false
							end
						end
					end
				end
			else
				antifall3:Destroy()
			end
			if getgenv().AllBosses == false then
				TweenFa:Cancel()
			end
		end)
	end
end)

-- Anti Webhook
local no
no = hookfunction(fluxus.request, function(...)
	local Args = {...}
	local Self = Args[1]
	if string.find(Self['Url'], 'webhooks') then
		return rconsoleprint('lol no\n')
	end
	return no(...)
end)
