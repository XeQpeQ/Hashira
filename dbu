Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local plr = game.Players.LocalPlayer
local Settings = { Variables = { Farm = false } }

local Window = Rayfield:CreateWindow({
    Name = "Dragon Blox Ultimate",
    LoadingTitle = "Dragon Blox Ultimate",
    LoadingSubtitle = "by yeetman56y",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "dragon blox ultimate"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "Dragon Blox Ultimate | Key",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "dragon blox ultimate key",
        Key = {"https://pastebin.com/raw/V8M7A2ig"}
    }
})

local MainTab = Window:CreateTab("Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
    Title = "You Executed The Script",
    Content = "Test Tbh",
    Duration = 5,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
        },
    },
})

local ToggleAutoFarm = MainTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        Settings.Variables.Farm = Value
        while Settings.Variables.Farm and wait() do
            if not plr.PlayerGui.Main.MainFrame.Frames.Quest.Nop.Visible then
                for _, v in ipairs(workspace.Living:GetChildren()) do
                    local questName = returnQuest(true) -- AsegÃºrate de definir returnQuest()
                    if v.Name == questName and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and v.Humanoid.Health > 0 then
                        repeat
                            wait()
                            pcall(function()
                                plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            end)
                            punchRemote:FireServer('Blacknwhite27', 1)
                        until v.Humanoid.Health <= 0 or plr.PlayerGui.Main.MainFrame.Frames.Quest.Nop.Visible or not Settings.Variables.Farm
                    end
                end
            else
                pcall(function()
                    questRemote:InvokeServer(workspace.Others.NPCs[returnQuest(true)])
                end)
            end
        end
    end
})

local SliderFlySpeed = MainTab:CreateSlider({
    Name = "Fly Speed",
    Range = {0, 100000},
    Increment = 10,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "Slider1",
    Callback = function(Value)
        flyspeed = Value
    end
})

local ToggleAutoRebirth = MainTab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(bool)
        while bool and wait() do
            rebirthRemote:InvokeServer()
        end
    end
})

local ToggleGodMode = MainTab:CreateToggle({
    Name = "God Mode",
    CurrentValue = false,
    Flag = "Toggle3",
    Callback = function(Value)
        local function Invincibility()
            if plr.Character then
                for _, v in ipairs(plr.Character:GetChildren()) do
                    if v.Name == "hitbox" then
                        v:Destroy()
                    end
                end
            end
        end
        
        while Value and wait(0.5) do
            Invincibility()
        end
    end
})

local ToggleAutoCharge = MainTab:CreateToggle({
    Name = "Auto Charge",
    CurrentValue = false,
    Flag = "Toggle4",
    Callback = function(bool)
        while bool and wait() do
            game:GetService("ReplicatedStorage").Package.Events.cha:InvokeServer('Blacknwhite27')
        end
    end
})

local DropdownTeleport = MainTab:CreateDropdown({
    Name = "Teleport",
    Options = {"Earth", "Bills Planet"},
    CurrentOption = "Earth",
    MultipleOptions = false,
    Flag = "Teleport",
    Callback = function(Option)
        -- Define your teleport logic here
        print("Selected location: " .. Option)
    end
})

local ToggleAutoTransform = MainTab:CreateToggle({
    Name = "Auto Transform",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        if Value then
            loadstring(game:HttpGet("https://pastebin.com/raw/zt5pVPJ5"))()
        end
    end
})
