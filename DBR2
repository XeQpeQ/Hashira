local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local maximoMensajeMostrado = false
local player = game.Players.LocalPlayer

local playerState = workspace:WaitForChild(player.Name):WaitForChild("State")
local energyObj = playerState:WaitForChild("Energy")
local maxEnergyObj = playerState:WaitForChild("MaxEnergy")

-- Requiere el módulo Virtual Input Manager
local VirtualInputManager = game:GetService("VirtualInputManager")
-- Función para simular la presión de teclas

local function pressKey(keyCode)
    VirtualInputManager:SendKeyEvent(true, keyCode, false, game)
end

-- Función para simular la liberación de teclas
local function releaseKey(keyCode)
    VirtualInputManager:SendKeyEvent(false, keyCode, false, game)
end

local function convertirValor(valor, sufijo)
    valor = tonumber(valor)
    if sufijo == "k" then
        return valor * 1e3
    elseif sufijo == "M" then
        return valor * 1e6
    elseif sufijo == "B" then
        return valor * 1e9
    elseif sufijo == "T" then
        return valor * 1e12
    else
        return valor 
    end
end

local function barraAlMaximo(barra)
    local valorActual, sufijoActual, valorMaximo, sufijoMaximo = barra.Text:match("(%d+%.?%d*)([kMBT]?)/(%d+%.?%d*)([kMBT]?)")
    if not valorActual or not valorMaximo then return false end

    valorActual = convertirValor(valorActual, sufijoActual)
    valorMaximo = convertirValor(valorMaximo, sufijoMaximo)

    return valorActual >= valorMaximo
end

local function verificarBarras()
    local playerGui = player:WaitForChild("PlayerGui")
    local zenkaiUI = playerGui:WaitForChild("PlayerInterface").Center.Zenkai.Container.Progress
    local attackBar = zenkaiUI.AttackBar.Number
    local agilityBar = zenkaiUI.AgilityBar.Number
    local kiBar = zenkaiUI.KiBar.Number
    local defenseBar = zenkaiUI.DefenseBar.Number
    local ataqueMaximo = barraAlMaximo(attackBar)
    local agilidadMaxima = barraAlMaximo(agilityBar)
    local energiaMaxima = barraAlMaximo(kiBar)
    local defensaMaxima = barraAlMaximo(defenseBar)
    
    if not ataqueMaximo or not agilidadMaxima then
        maximoMensajeMostrado = false
        getgenv().AutoAttack = true
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    elseif ataqueMaximo and agilidadMaxima and not energiaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = true
        getgenv().AutoDefense = false
    elseif energiaMaxima and not defensaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = true
    elseif ataqueMaximo and agilidadMaxima and energiaMaxima and defensaMaxima then
        if not maximoMensajeMostrado then
            local zenkaiButton = playerGui.PlayerInterface.Center.Zenkai.Info:FindFirstChild("Zenkai")
            if zenkaiButton and zenkaiButton:FindFirstChild("Button") then
                GuiService.SelectedObject = zenkaiButton.Button
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                task.wait()
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                maximoMensajeMostrado = true
            end
        end
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    end
end

-- Función para evitar ser expulsado
local VirtualUser = game:GetService('VirtualUser')
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Configuración de UI
local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})

local maintab = win:Tab('Main')
local uitab = win:Tab('UI')

uitab:Button('Destroy GUI', function()
    win:Exit()
end)

maintab:Toggle('Auto Farming', function(v)
    getgenv().AutoFarm = v
    if not v then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            pcall(verificarBarras)
        end
    end
end)

    task.spawn(function()
        while task.wait() do
            if getgenv().AutoAttack then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                task.wait()
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
            end
        end
    end)

task.spawn(function()
    local player = game.Players.LocalPlayer
    local autoEnergy = false
    
    while wait() do
        pcall(function()
            local energy = workspace[player.Name].State.Energy.Value
            local maxEnergy = workspace[player.Name].State.MaxEnergy.Value
            
            if getgenv().AutoEnergy then
                if energy <= 50 then
                    VirtualInputManager:SendKeyEvent(true, "C", false, game)
                    autoEnergy = true
                elseif energy >= maxEnergy then
                    VirtualInputManager:SendKeyEvent(false, "C", false, game)
                    autoEnergy = false
                end
                
                if not autoEnergy then
                    VirtualInputManager:SendKeyEvent(true, "Q", false, game)
                else
                    VirtualInputManager:SendKeyEvent(false, "Q", false, game)
                end
            else
                VirtualInputManager:SendKeyEvent(false, "C", false, game)
                VirtualInputManager:SendKeyEvent(false, "Q", false, game)
            end
        end)
    end
end)

task.spawn(function()
        while task.wait() do
            if getgenv().AutoDefense then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
                task.wait()
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
            end
        end
    end)
