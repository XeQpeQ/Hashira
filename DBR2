local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local energy = workspace[player.Name].State.Energy.Value
local maxEnergy = workspace[player.Name].State.MaxEnergy.Value
local GuiService = game:GetService("GuiService")
local maximoMensajeMostrado = false
local function barraAlMaximo(barra)
    local valorActual, valorMaximo = barra.Text:match("(%d+%.?%d*)M/(%d+%.?%d*)M")
    valorActual = tonumber(valorActual)
    valorMaximo = tonumber(valorMaximo)
    return valorActual >= valorMaximo
end

local function verificarBarras()
    local attackBar = player.PlayerGui.PlayerInterface.Center.Zenkai.Container.Progress.AttackBar.Number
    local agilityBar = player.PlayerGui.PlayerInterface.Center.Zenkai.Container.Progress.AgilityBar.Number
    local kiBar = player.PlayerGui.PlayerInterface.Center.Zenkai.Container.Progress.KiBar.Number
    local defenseBar = player.PlayerGui.PlayerInterface.Center.Zenkai.Container.Progress.DefenseBar.Number

    -- Verificación de estado de las barras
    local ataqueMaximo = barraAlMaximo(attackBar)
    local agilidadMaxima = barraAlMaximo(agilityBar)
    local energiaMaxima = barraAlMaximo(kiBar)
    local defensaMaxima = barraAlMaximo(defenseBar)

    -- Condicionales para activar/desactivar las funciones según el estado de las barras
    if not ataqueMaximo or not agilidadMaxima then
        maximoMensajeMostrado = false
        GuiService.SelectObject = nil
        getgenv().AutoAttack = true
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    elseif ataqueMaximo and agilidadMaxima and not energiaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = true
        getgenv().AutoDefense = false
    elseif energiaMaxima and not defensaMaxima then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = true
    elseif ataqueMaximo and agilidadMaxima and energiaMaxima and defensaMaxima then
        if not maximoMensajeMostrado then
        local Zenkai = game.Players.LocalPlayer.PlayerGui.PlayerInterface.Center.Zenkai.Info:FindFirstChild("Zenkai")
if Zenkai then
    local button = Zenkai:FindFirstChild("Button")
    if button then
        GuiService.SelectedObject = button
    end
end
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
            maximoMensajeMostrado = true
        end
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    end
end

local bb = game:GetService('VirtualUser')
game:GetService('Players').LocalPlayer.Idled:connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
    ab.Text = "Roblox intentó expulsarte, pero lo evité"
    wait(2)
    ab.Text = "Estado: Activo"
end)

local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})
local maintab = win:Tab('Main')
local AutoFarm = win:Tab('AutoFarm')
local uitab = win:Tab('UI')

uitab:Button('Destroy GUI', function()
    win:Exit()
end)

maintab:Toggle('Auto Farming', function(v)
    getgenv().AutoFarm = v
    if not v then
        getgenv().AutoAttack = false
        getgenv().AutoEnergy = false
        getgenv().AutoDefense = false
    end
end)
maintab:Toggle('Auto Charge', function(v)
    getgenv().AutoCharge = v
end)

task.spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoFarm then
                verificarBarras()
            end
        end)
    end
end)

task.spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoAttack then
                VirtualInputManager:SendKeyEvent(true, "E", false, game) 
                task.wait()
                VirtualInputManager:SendKeyEvent(false, "E", false, game) 
            end
        end)
    end
end)

task.spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoEnergy then
                VirtualInputManager:SendKeyEvent(true, "Q", false, game) 
                task.wait()
                VirtualInputManager:SendKeyEvent(false, "Q", false, game) 
            end
        end)
    end
end)

task.spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoDefense then
                VirtualInputManager:SendKeyEvent(true, "R", false, game) 
                task.wait()
                VirtualInputManager:SendKeyEvent(false, "R", false, game) 
            end
        end)
    end
end)

task.spawn(function()
    local autoEnergy = false

    while wait() do
        pcall(function()
            local energy = workspace[player.Name].State.Energy.Value
            local maxEnergy = workspace[player.Name].State.MaxEnergy.Value

            if getgenv().AutoCharge then
                if energy <= 50 then
                    getgenv().AutoFarm = false
                    VirtualInputManager:SendKeyEvent(true, "C", false, game)
                    autoEnergy = true
                elseif energy >= maxEnergy then
                    VirtualInputManager:SendKeyEvent(false, "C", false, game)
                    autoEnergy = false
                    getgenv().AutoFarm = true
                end
            end
        end)
    end
end)
