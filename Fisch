getgenv().AutoFarm = true
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Test = false
local VirtualUser = game:GetService('VirtualUser')
game:GetService('Players').LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
 VirtualUser:ClickButton2(Vector2.new())
end)
local player = Players.LocalPlayer
local initialPosition = player.Character and player.Character.PrimaryPart.Position 

local function onRenderStepped()
    if getgenv().AutoFarm then
        local shakeUI = player.PlayerGui:FindFirstChild("shakeui")
        
        if not Test then
            local args = { [1] = 100, [2] = 1 }
            player.Character:FindFirstChild("Steady Rod").events.cast:FireServer(unpack(args))
            Test = true
        end

        if shakeUI then
            local selectedObject = nil

            local function updateUISelection()
                if selectedObject then
                    selectedObject.BorderSizePixel = 2
                    selectedObject.BorderColor3 = Color3.fromRGB(0, 255, 0)
                end
            end

            local function initializeSelection()
                local safezone = shakeUI:FindFirstChild("safezone")
                if safezone then
                    local button = safezone:FindFirstChild("button")
                    if button then
                        GuiService.SelectedObject = button
                    end
                end
            end
            initializeSelection()

            local VirtualInputManager = game:GetService("VirtualInputManager")
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        end
        
        local reel = player.PlayerGui:FindFirstChild("reel")
        if reel then
            local args2 = { [1] = 100, [2] = false }
            local reelfinished = ReplicatedStorage:WaitForChild("events"):FindFirstChild("reelfinished")
            reelfinished:FireServer(unpack(args2))
            task.wait(1)
            local merchant = workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Matt Merchant"):FindFirstChild("merchant")
            if merchant then
                local sellAll = merchant:FindFirstChild("sellall")
                if sellAll then
                    sellAll:InvokeServer()
                end
            end

            task.wait(3)
            Test = false
        end
    end
end

RunService.RenderStepped:Connect(onRenderStepped)

task.spawn(function()
    while getgenv().AutoFarm do
        if player.Character and player.Character.PrimaryPart then
            player.Character:SetPrimaryPartCFrame(CFrame.new(initialPosition))
        end
        task.wait(10)
    end
end)
