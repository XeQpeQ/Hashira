local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local gui, mainFrame, originalSize, isExpanded
local LocalPlayer = Players.LocalPlayer
local FarmMethod = "Above"
local tweenSpeed = 50
local distance = 10
local AutoBandit = false
local NearestMobs = false
local SkillActive = false

local function toggleGUIVisibility(visible)
    if gui then
        gui.Enabled = visible
    end
end

local function toggleGUISize(expand)
    if mainFrame and originalSize then
        if expand then
            mainFrame.Size = originalSize
        else
            mainFrame.Size = UDim2.new(0, 150, 0, 100) -- Modifica el tamaño según sea necesario
        end
        isExpanded = expand
    end
end

local function getDistance(endpoint)
    if typeof(endpoint) == "Instance" then
        endpoint = Vector3.new(endpoint.Position.X, LocalPlayer.Character.HumanoidRootPart.Position.Y, endpoint.Position.Z)
    elseif typeof(endpoint) == "CFrame" then
        endpoint = Vector3.new(endpoint.Position.X, LocalPlayer.Character.HumanoidRootPart.Position.Y, endpoint.Position.Z)
    end
    return (endpoint - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
end

local function tween(endpoint)
    if typeof(endpoint) == "Instance" then
        endpoint = endpoint.CFrame
    end
    local distance = getDistance(endpoint)
    local tweenInfo = TweenInfo.new(distance / tweenSpeed, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = endpoint})
    tween:Play()

    local function cancelTween()
        tween:Cancel()
    end

    if distance <= 5 then
        LocalPlayer.Character.HumanoidRootPart.CFrame = endpoint
        cancelTween()
        return
    end
    return cancelTween
end

local function autoBanditLogic()
    while task.wait() do
        pcall(function()
            if AutoBandit then
                local bandit = Workspace.NPC.Fight.Bandits.Bandit
                if bandit and bandit.HumanoidRootPart then
                    if not LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        local antifall = Instance.new("BodyVelocity", LocalPlayer.Character.HumanoidRootPart)
                        antifall.Velocity = Vector3.new(0, 0, 0)
                        antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                    end

                    for _, v in ipairs(Workspace.NPC.Fight.Bandits:GetChildren()) do
                        if v:IsA("Model") and v.Name:match("Bandit") then
                            if v.Humanoid.Health > 0 then
                                local distance = getDistance(v:GetModelCFrame() * FarmModes)
                                repeat
                                    task.wait()
                                    if distance < 25 and distance < 150 then
                                        if TweenFa then
                                            TweenFa()
                                            wait(0.1)
                                        end
                                        LocalPlayer.Character.HumanoidRootPart.CFrame = v:GetModelCFrame()
                                    else
                                        TweenFa = tween(v:GetModelCFrame() * FarmModes)
                                    end
                                    if v.Humanoid.Health > 0 and distance < 10 then
                                        NearestMobs = true
                                    elseif v.Humanoid.Health <= 0 or distance > 10 then
                                        NearestMobs = false
                                    end
                                until not AutoBandit or v.Humanoid.Health <= 0 or not v:IsDescendantOf(Workspace)
                                NearestMobs = false
                            end
                        end
                    end
                end

                if not AutoBandit and TweenFa then
                    TweenFa()
                end
                if bandit and bandit.Humanoid.Health == 0 then
                    bandit:Destroy()
                end
            end
        end)
    end
end

local function bringMobsTo(enemyName, cframe, sBring)
    for _, v in ipairs(Workspace.NPC.Fight.Bandits:GetChildren()) do
        if (sBring or v.Name == enemyName) and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local pp = v.PrimaryPart
            if pp and (pp.Position - cframe.Position).Magnitude < 500 then
                v.Humanoid.WalkSpeed = 0
                v.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                pp.CFrame = cframe
                pp.CanCollide = false
                pp.Transparency = 0.8
                pp.Size = Vector3.new(50, 50, 50)
            end
        end
    end
    pcall(sethiddenproperty, LocalPlayer, "SimulationRadius", math.huge)
end

task.spawn(autoBanditLogic)

local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})

local AutoFarm = win:Tab('AutoFarm')
local uiTab = win:Tab('UI')

uiTab:Button('Destroy GUI', function()
    win:Exit()
end)

AutoFarm:Toggle('Auto Bandit', function(v)
    AutoBandit = v
end)

AutoFarm:Button('Infinite Dash', function()
    local originalNamecall = hookmetamethod(game, '__namecall', function(self, ...)
        local args = {...}
        local method = getnamecallmethod()

        if method == 'FireServer' and self.Name == 'Dash' then 
            return false
        end

        return originalNamecall(self, ...)
    end)
end)
