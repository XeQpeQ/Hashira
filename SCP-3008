local bb = game:service('VirtualUser')
game:service('Players').LocalPlayer.Idled:connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
    ab.Text = "Roblox intentó expulsarte, pero lo evité"
    wait(2)
    ab.Text = "Estado: Activo"
end)
local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})
local maintab = win:Tab('Main')
local uitab = win:Tab('UI')
local Text
local Text2
uitab:Button('Destroy GUI', function()
    win:Exit()
end)

maintab:Button('Teleport to Item', function()
local player = game.Players.LocalPlayer
local Character = player.Character

if not Character then
    return
end

local targetPositions = {}

for i, v in ipairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("Model") and v.Name:match(Text) and not v:IsDescendantOf(game:GetService("Workspace").GameObjects.Physical.Items) then
        table.insert(targetPositions, v:GetModelCFrame().Position)
    end
end

if #targetPositions > 0 then
    local targetPosition = targetPositions[math.random(#targetPositions)]
    Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
end

end)
maintab:Textbox('Name of Item', function(v)
Text = v
end)
maintab:Button('Teleport To Player', function()
local player = game.Players.LocalPlayer
local Character = player.Character

if not Character then
    return
end

local targetPositions = {}

for i, v in ipairs(game:GetService("Workspace").GameObjects.Physical.Players:GetChildren()) do
    if v:IsA("Model") and v.Name:match(Text2) then
        table.insert(targetPositions, v:GetModelCFrame().Position)
    end
end

if #targetPositions > 0 then
    local targetPosition = targetPositions[math.random(#targetPositions)]
    Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
end
end)
maintab:Textbox('Username', function(v2)
Text2 = v2
end)
