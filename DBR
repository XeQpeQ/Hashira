local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local gui, mainFrame, originalSize, isExpanded
local energy = workspace[player.Name].State.Energy.Value
local maxEnergy = workspace[player.Name].State.MaxEnergy.Value

-- Function to toggle GUI visibility
local function toggleGUIVisibility(visible)
    if gui then
        gui.Enabled = visible
    end
end

-- Function to toggle GUI size
local function toggleGUISize(expand)
    if mainFrame and originalSize then
        if expand then
            mainFrame.Size = originalSize
        else
            mainFrame.Size = UDim2.new(0, 150, 0, 100) -- Modify the size as needed
        end
        isExpanded = expand
    end
end

    local bb = game:GetService('VirtualUser')

    game:GetService('Players').LocalPlayer.Idled:connect(function()
        bb:CaptureController()
        bb:ClickButton2(Vector2.new())
        ab.Text = "Roblox intentó expulsarte, pero lo evité"
        wait(2)
        ab.Text = "Estado: Activo"
    end)

    local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
    local win = HashiraUI:Create({
        Name = "Hashira Hub",
        StartupSound = {
            Toggle = false,
            SoundID = "rbxassetid://6958727243",
            TimePosition = 1
        }
    })
    local maintab = win:Tab('Main')
    local uitab = win:Tab('UI')

    uitab:Button('Destroy GUI', function()
        win:Exit()
    end)

maintab:Toggle('Auto Train E', function(v)
getgenv().AutoAttack = v
end)
maintab:Toggle('Auto Train Q', function(v)
getgenv().AutoEnergy = v
end)
maintab:Toggle('Auto Saibamen', function(v)
getgenv().AutoSaibamen = v
end)

local LP = game.Players.LocalPlayer
local client = game.Players.LocalPlayer
local FarmMethod = "Behind"
local tweenspeed = 400
local Distance = 10

local function GetDistance(Endpoint)
	if typeof(Endpoint) == "Instance" then
		Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
	elseif typeof(Endpoint) == "CFrame" then
		Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
	end
	local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
	return Magnitude
end
function Tween(Endpoint)
	if typeof(Endpoint) == "Instance" then
		Endpoint = Endpoint.CFrame
	end
	local TweenFunc = {}
	local Distance = GetDistance(Endpoint)
	local TweenInfo = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance/tweenspeed, Enum.EasingStyle.Linear), {CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1,0,0), math.rad(0))})
	TweenInfo:Play()
	function TweenFunc:Cancel()
		TweenInfo:Cancel()
		return false
	end
	if Distance <= 100 then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
		TweenInfo:Cancel()
		return false
	end
	return TweenFunc
end
-- Auto Farm Method
task.spawn(function()
	while wait() do
		pcall(function()
			SkillActive = AutoUseSkills and (FarmBoss and NearestMobs) or AutoUseSkills and (FarmQuest and NearestMobs) or AutoUseSkills and (FarmMob and NearestMobs) or AutoUseSkills and (AutoSaibamen and NearestMobs)
			if FarmMethod == "Above" then
				FarmModes = CFrame.new(0,Distance,0) * CFrame.Angles(math.rad(-90),0,0) 
			elseif FarmMethod == "Below" then
				FarmModes = CFrame.new(0,-Distance,0) * CFrame.Angles(math.rad(90),0,0)
			elseif FarmMethod == "Behind" then
				FarmModes = CFrame.new(0,0,Distance)
			elseif FarmMethod == "Ahead" then
				FarmModes = CFrame.new(0, 0, -Distance)
                                local rotation = CFrame.Angles(0, math.rad(180), 0)
                                FarmModes = FarmModes * rotation
			end
		end)
	end
end)

task.spawn(function()
	while task.wait() do
		pcall(function()
			if getgenv().AutoSaibamen then
				if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					antifall3 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
					antifall3.Velocity = Vector3.new(0, 0, 0)
					antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
				elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
					for i, v in pairs(game:GetService("Workspace").Map.NPCs:GetChildren()) do
						if v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Name:match("Saibamen") then
							if v.Humanoid.Health > 0 then
								local distance = GetDistance(v:GetModelCFrame() * FarmModes)
								repeat
									task.wait()
									if distance < 25 and distance < 150 then
										if TweenFa then
											TweenFa:Cancel()
											wait(.1)
										end
										LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame()
									else
										TweenFa = Tween(v:GetModelCFrame() * FarmModes)
									end
									if v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and distance < 10 then
										NearestMobs = true
									elseif v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") and distance > 10 then
										NearestMobs = false
									end
								until not getgenv().AutoSaibamen or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
								NearestMobs = false
							end
						end
					end
				end
			else
				if antifall3 then
					antifall3:Destroy()
				end
			end
			if getgenv().AutoSaibamen == false and TweenFa then
				TweenFa:Cancel()
			end
		end)
	end
end)

task.spawn(function()
	while task.wait() do
		pcall(function()
			if getgenv().AutoAttack then
			VirtualInputManager:SendKeyEvent(true,"E",false,game) 
			end
		end)
	end
end)

task.spawn(function()
    local player = game.Players.LocalPlayer
    local autoC = false
    
    while wait() do
        pcall(function()
            local energy = workspace[player.Name].State.Energy.Value
            local maxEnergy = workspace[player.Name].State.MaxEnergy.Value
            
            if getgenv().AutoEnergy then
                if energy <= 50 then
                    VirtualInputManager:SendKeyEvent(true, "C", false, game)
                    autoC = true
                elseif energy >= maxEnergy then
                    VirtualInputManager:SendKeyEvent(false, "C", false, game)
                    autoC = false
                end
                
                if not autoC then
                    VirtualInputManager:SendKeyEvent(true, "Q", false, game)
                else
                    VirtualInputManager:SendKeyEvent(false, "Q", false, game)
                end
            else
                VirtualInputManager:SendKeyEvent(false, "C", false, game)
                VirtualInputManager:SendKeyEvent(false, "Q", false, game)
            end
        end)
    end
end)

