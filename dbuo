transform = false
local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local events = replicatedStorage.Package.Events
local runService = game:GetService("RunService")
local data = replicatedStorage.Datas[player.UserId]
local skills = replicatedStorage.Package.Skills
local market = game:GetService("MarketplaceService")

function gamepass(gamepassid)
    local s,res = pcall(market.UserOwnsGamePassAsync,market,player.UserId,gamepassid)
    if not s then
        res = false
    end
    return res
end
local gamepasses = {}
for i,v in pairs(skills:GetChildren()) do
    if v:FindFirstChild("Gamepass") then
        gamepasses[v.Gamepass.Value] = gamepass(v.Gamepass.Value)
    end
end

function recharge()
    repeat
        spawn(function()
            events.cha:InvokeServer(key)
        end)
        wait()
    until player.Character.Stats.Ki.Value == player.Character.Stats.Ki.MaxValue
end

function trans()
	local unlocked = {}
    if pcall(function() return player.Character.Status.Transformation,player.Character.Status.SelectedTransformation,player.Character.Stats.Ki end) then
		local shit = skills:GetChildren()
		for i = 1, #shit do local v = shit[i]
			if v:FindFirstChild("Time") then
				local un = true
                local shit2 = v.Requirements:GetChildren()
                local al = v:FindFirstChild("Allignment")
				for i2 = 1, #shit2 do local v2 = shit2[i2]
					if data[v2.Name].Value < v2.Value then
						un = false
					end
				end
				if al and al.Value ~= data.Allignment.Value then
				    un = false
                end
                if v:FindFirstChild("Gamepass") and not gamepasses[v.Gamepass.Value] then
                    un = false
                end
				if un then
					table.insert(unlocked, v.Name)
				end
            end
		end
		if #unlocked > 1 then
			table.sort(unlocked, function(a,b)
				return skills[a].Requirements.Strength.Value > skills[b].Requirements.Strength.Value
            end)
            if unlocked[1] ~= player.Character.Status.Transformation.Value then
    			return unlocked[1]
            end
        end
		return false
	end
end

function transformation()
    local form = trans()
    if typeof(form) == "string" then
        print(form)
        if player.Character.Status.Transformation.Value ~= "None" then
            spawn(function()
                events.ta:InvokeServer()
            end)
        end
        repeat
            spawn(function()
                events.equipskill:InvokeServer(form)
            end)
            wait(.25)
        until player.Character.Status.SelectedTransformation.Value == form
        repeat
            spawn(function()
                events.cha:InvokeServer(key)
            end)
            wait()
        until player.Character.Stats.Ki.Value == player.Character.Stats.Ki.MaxValue
        local max = player.Character.Stats.Ki.MaxValue
        repeat
            wait(.25)
            spawn(function()
                events.ta:InvokeServer()
            end)
        until max < player.Character.Stats.Ki.MaxValue
        if not energy then
            recharge()
        end
    end
end

Stepped = game:GetService('RunService').Stepped:Connect(function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then 
        player.Character.Humanoid:ChangeState(11)
    end
    if Autofarm == false then 
        Stepped:Disconnect()
    end
end)

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly", "X Fighter Trainer",
    "Super Vegetable", "Klirin", "SSJ2 Wukong", "Perfect Atom", "Radish", "Mapa",
    "Broccoli", "SSJG Kakata", "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local MobTable = {}
local mobNamesAdded = {}

-- Llenar MobTable con nombres únicos de mobs
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not player:FindFirstChild(mob.Name) and not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Hashira Hub", HidePremium = false, SaveConfig = false, ConfigFolder = "Orion"})

local PlayerTab = Window:MakeTab({
	Name = "MainTab",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

PlayerTab:AddToggle({
	Name = "On/Off",
	Default = false,
	Callback = function(Value)
		getgenv().AutoFarm = Value
	end    
})

PlayerTab:AddToggle({
	Name = "Auto Rebirth",
	Default = false,
	Callback = function(Value)
		getgenv().AutoRebirth = Value
	end    
})

PlayerTab:AddToggle({
	Name = "Auto Transform",
	Default = false,
	Callback = function(Value)
		Transform = Value
	end    
})

PlayerTab:AddToggle({
	Name = "Energy Drain",
	Default = false,
	Callback = function(Value)
		energy = Value
	end    
})

PlayerTab:AddDropdown({
	Name = "Select Mob",
	Default = "None",
	Options = MobTable,
	Callback = function(Value)
		SelectedMob = Value
	end    
})

PlayerTab:AddDropdown({
	Name = "Select Quest",
	Default = "None",
	Options = Quest,
	Callback = function(Value)
		SelectedQuest = Value
	end    
})

-- Función de búsqueda de Quest
local function quest()
    if replicatedStorage.Datas[player.UserId].Quest.Value ~= SelectedQuest then
        local questNPC = game:GetService("Workspace").Others.NPCs:FindFirstChild(SelectedQuest)
        if questNPC then
            player.Character.HumanoidRootPart.CFrame = questNPC.HumanoidRootPart.CFrame
            repeat
                wait()
                events.Qaction:InvokeServer(questNPC)
            until replicatedStorage.Datas[player.UserId].Quest.Value == SelectedQuest
        end
    end
end

-- Bucle para activar el AutoFarm
task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            -- Añadiendo BodyVelocity para evitar caídas
            local antifall3 = Instance.new("BodyVelocity", player.Character.HumanoidRootPart)
            antifall3.Velocity = Vector3.new(0, 0, 0)
            antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            
            pcall(function()
                for _, mob in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                    if mob.Name:lower() == SelectedMob:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                        repeat
                            quest()
                            player.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            wait()
                            events.p:FireServer("Blacknwhite27", 1)
                        until not getgenv().AutoFarm or not mob or mob.Humanoid.Health <= 0
                    end
                end
            end)

            -- Limpiar el BodyVelocity después de terminar el farmeo
            antifall3:Destroy()
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().AutoRebirth then
            game:GetService("ReplicatedStorage"):WaitForChild("Package"):WaitForChild("Events"):WaitForChild("reb"):InvokeServer()
        end
    end
end)

spawn(function()
    while true do wait()
        if Transform then
            transformation()
            wait(1)
        end
    end
end)

spawn(function()
    while true do
        if energy and drain.Name == "drain" then
            drain.Name = "drain2"
            drain2.Name = "drain"
        elseif not energy and drain.Name == "drain2" then
            drain.Name = "drain"
            drain2.Name = "drain2"
        end
        wait(.7)
    end
end)
