local LP = game.Players.LocalPlayer
local events = game:GetService("ReplicatedStorage").Package.Events
local rs = game:GetService("RunService")
local data = game.ReplicatedStorage.Datas[LP.UserId]
local market = game:GetService("MarketplaceService")
local TweenService = game:GetService("TweenService")

local MobTable = {}
local mobNamesAdded = {}

-- Fill MobTable with unique mob names
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly",
    "X Fighter Trainer", "Super Vegetable", "Klirin", "SSJ2 Wukong",
    "Perfect Atom", "Radish", "Mapa", "Broccoli", "SSJG Kakata",
    "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local bb = game:GetService('VirtualUser')
local TweenFa -- Variable to store the tween function

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
    print("Roblox intentó expulsarte, pero lo evité")
    wait(2)
    print("Estado: Activo")
end)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("MainTab", 4483362458)

local Toggle = Tab:CreateToggle({
   Name = "On/Off",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
        getgenv().AutoFarm = Value
   end,
})

local DropdownMob = Tab:CreateDropdown({
   Name = "Select Mob",
   Options = MobTable,
   CurrentOption = {"None"},
   MultipleOptions = false,
   Flag = "Dropdown1",
   Callback = function(Option)
        SelectedMob = Option
   end,
})

local DropdownQuest = Tab:CreateDropdown({
   Name = "Select Quest",
   Options = Quest,
   CurrentOption = {"None"},
   MultipleOptions = false,
   Flag = "Dropdown2",
   Callback = function(Option)
       SelectedQuest = Option
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Slider Example",
   Range = {0, 10},
   Increment = 1,
   Suffix = "",
   CurrentValue = 1,
   Flag = "Slider1", 
   Callback = function(Value)
       TpDistance = Value
   end,
})

local function GetDistance(Endpoint)
    local characterPos = LP.Character.HumanoidRootPart.Position
    if typeof(Endpoint) == "Instance" then
        return (Endpoint.Position - characterPos).Magnitude
    elseif typeof(Endpoint) == "CFrame" then
        return (Endpoint.Position - characterPos).Magnitude
    end
    return 0
end

local function Tween(Endpoint)
    local Distance = GetDistance(Endpoint)
    local TweenInfo = TweenInfo.new(Distance / 400, Enum.EasingStyle.Linear)
    local TweenFunc = TweenService:Create(LP.Character.HumanoidRootPart, TweenInfo, {CFrame = Endpoint})

    TweenFunc:Play()
    return TweenFunc
end

-- Auto Farm Method
task.spawn(function()
    while wait() do
        pcall(function()
            local FarmModes
            local Distance = TpDistance 
            local FarmMethod = getgenv().FarmMethod or "Behind"

            if FarmMethod == "Above" then
                FarmModes = CFrame.new(0, Distance, 0) * CFrame.Angles(math.rad(-90), 0, 0)
            elseif FarmMethod == "Below" then
                FarmModes = CFrame.new(0, -Distance, 0) * CFrame.Angles(math.rad(90), 0, 0)
            elseif FarmMethod == "Behind" then
                FarmModes = CFrame.new(0, 0, Distance)
            elseif FarmMethod == "Ahead" then
                FarmModes = CFrame.new(0, 0, -Distance) * CFrame.Angles(0, math.rad(180), 0)
            end
        end)
    end
end)

local function quest()
    if data.Quest.Value ~= SelectedQuest then
        LP.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Others.NPCs[SelectedQuest].HumanoidRootPart.CFrame
        repeat
            wait()
            events.Qaction:InvokeServer(game:GetService("Workspace").Others.NPCs[SelectedQuest])
        until data.Quest.Value == SelectedQuest
    end
end

task.spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoFarm then
                if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                    local antifall = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                    antifall.Velocity = Vector3.new(0, 0, 0)
                    antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                end

                for _, v in pairs(game:GetService("Workspace").Living:GetChildren()) do
                    if v.Name:lower() == SelectedMob:lower() and v.Humanoid.Health > 0 then
                        local distance = GetDistance(v:GetModelCFrame() * FarmModes)

                        repeat
                            quest()
                            events.p:FireServer("Blacknwhite27", 1)
                            task.wait()

                            if distance < 25 then
                                if TweenFa then
                                    TweenFa:Cancel()
                                    wait(0.1)
                                end
                                LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame()
                            else
                                TweenFa = Tween(v:GetModelCFrame() * FarmModes)
                            end

                            distance = GetDistance(v:GetModelCFrame() * FarmModes) -- Actualiza la distancia en cada iteración
                        until not getgenv().AutoFarm or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
                    end
                end
            end

            if not getgenv().AutoFarm and TweenFa then
                TweenFa:Cancel()
            end
        end)
    end
end)

print("Script loaded successfully!")
