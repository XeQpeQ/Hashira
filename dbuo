local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local events = replicatedStorage.Package.Events
local runService = game:GetService("RunService")
local data = replicatedStorage.Datas[player.UserId]
local skills = replicatedStorage.Package.Skills
local market = game:GetService("MarketplaceService")

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly", "X Fighter Trainer",
    "Super Vegetable", "Klirin", "SSJ2 Wukong", "Perfect Atom", "Radish", "Mapa",
    "Broccoli", "SSJG Kakata", "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local MobTable = {}
local mobNamesAdded = {}

-- Llenar MobTable con nombres únicos de mobs
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not player:FindFirstChild(mob.Name) and not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

-- Crear GUI programática
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "AutoFarmGUI"

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 0

local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.Text = "AutoFarm GUI"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextScaled = true

local autofarmToggle = Instance.new("TextButton", mainFrame)
autofarmToggle.Size = UDim2.new(1, -20, 0, 40)
autofarmToggle.Position = UDim2.new(0, 10, 0, 60)
autofarmToggle.Text = "Enable AutoFarm"
autofarmToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autofarmToggle.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
autofarmToggle.BorderSizePixel = 0
autofarmToggle.TextScaled = true

local selectedMob = MobTable[1] or "None"
local selectedQuest = Quest[1] or "None"

local function createDropdown(labelText, options, initialSelection, positionY)
    local label = Instance.new("TextLabel", mainFrame)
    label.Size = UDim2.new(1, -20, 0, 20)
    label.Position = UDim2.new(0, 10, 0, positionY)
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    
    local dropdown = Instance.new("TextButton", mainFrame)
    dropdown.Size = UDim2.new(1, -20, 0, 30)
    dropdown.Position = UDim2.new(0, 10, 0, positionY + 25)
    dropdown.Text = initialSelection
    dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdown.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    dropdown.BorderSizePixel = 0
    dropdown.TextScaled = true

    local selectedOption = initialSelection
    dropdown.MouseButton1Click:Connect(function()
        selectedOption = selectedOption == options[1] and options[2] or options[1]  -- Alterna entre las opciones
        dropdown.Text = selectedOption
    end)
    
    return dropdown, selectedOption
end

-- Crear dropdowns
local mobDropdown, selectedMob = createDropdown("Select Mob", MobTable, selectedMob, 100)
local questDropdown, selectedQuest = createDropdown("Select Quest", Quest, selectedQuest, 150)

-- Toggle de AutoFarm
local autofarmEnabled = false
autofarmToggle.MouseButton1Click:Connect(function()
    autofarmEnabled = not autofarmEnabled
    getgenv().AutoFarm = autofarmEnabled
    autofarmToggle.Text = autofarmEnabled and "Disable AutoFarm" or "Enable AutoFarm"
end)

-- Función de búsqueda de Quest
local function quest()
    if replicatedStorage.Datas[player.UserId].Quest.Value ~= selectedQuest then
        local questNPC = game:GetService("Workspace").Others.NPCs:FindFirstChild(selectedQuest)
        if questNPC then
            player.Character.HumanoidRootPart.CFrame = questNPC.HumanoidRootPart.CFrame
            repeat
                wait()
                events.Qaction:InvokeServer(questNPC)
            until replicatedStorage.Datas[player.UserId].Quest.Value == selectedQuest
        end
    end
end

-- Bucle para activar el AutoFarm
task.spawn(function()
    while task.wait() do
        if autofarmEnabled then
            pcall(function()
                for _, mob in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                    if mob.Name:lower() == selectedMob:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                        repeat
                            quest()
                            player.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            wait()
                            events.p:FireServer("Blacknwhite27", 1)
                        until not autofarmEnabled or not mob or mob.Humanoid.Health <= 0
                    end
                end
            end)
        end
    end
end)
