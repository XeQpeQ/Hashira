local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local events = replicatedStorage.Package.Events
local runService = game:GetService("RunService")
local data = replicatedStorage.Datas[player.UserId]
local skills = replicatedStorage.Package.Skills
local market = game:GetService("MarketplaceService")

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly", "X Fighter Trainer",
    "Super Vegetable", "Klirin", "SSJ2 Wukong", "Perfect Atom", "Radish", "Mapa",
    "Broccoli", "SSJG Kakata", "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local MobTable = {}
local mobNamesAdded = {}

-- Llenar MobTable con nombres únicos de mobs
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not player:FindFirstChild(mob.Name) and not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

-- Variables de selección
local SelectedMob = "None"
local SelectedQuest = "None"
getgenv().AutoFarm = false

-- Crear la interfaz de usuario (igual que en la respuesta anterior)
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.BackgroundTransparency = 0.1

local Title = Instance.new("TextLabel", MainFrame)
Title.Text = "AutoFarm Interface"
Title.Size = UDim2.new(1, 0, 0, 50)
Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 24
Title.BorderSizePixel = 0

-- Botón de activación de AutoFarm
local AutoFarmButton = Instance.new("TextButton", MainFrame)
AutoFarmButton.Size = UDim2.new(0.8, 0, 0, 40)
AutoFarmButton.Position = UDim2.new(0.1, 0, 0.2, 0)
AutoFarmButton.Text = "AutoFarm: OFF"
AutoFarmButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
AutoFarmButton.TextColor3 = Color3.new(1, 1, 1)
AutoFarmButton.Font = Enum.Font.SourceSans
AutoFarmButton.TextSize = 20
AutoFarmButton.BorderSizePixel = 0

AutoFarmButton.MouseButton1Click:Connect(function()
    getgenv().AutoFarm = not getgenv().AutoFarm
    AutoFarmButton.Text = "AutoFarm: " .. (getgenv().AutoFarm and "ON" or "OFF")
end)

-- Dropdowns para seleccionar Mob y Quest
-- (mantenemos los dropdowns con ScrollingFrame como en la respuesta anterior)

-- Función de búsqueda de Quest
local function quest()
    if replicatedStorage.Datas[player.UserId].Quest.Value ~= SelectedQuest then
        local questNPC = game:GetService("Workspace").Others.NPCs:FindFirstChild(SelectedQuest)
        if questNPC then
            player.Character.HumanoidRootPart.CFrame = questNPC.HumanoidRootPart.CFrame
            repeat
                wait()
                events.Qaction:InvokeServer(questNPC)
            until replicatedStorage.Datas[player.UserId].Quest.Value == SelectedQuest
        end
    end
end

-- Bucle para activar el AutoFarm
task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            pcall(function()
                -- Agregar BodyVelocity al jugador
                local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    local bodyVelocity = humanoidRootPart:FindFirstChild("AutoFarmBodyVelocity") or Instance.new("BodyVelocity")
                    bodyVelocity.Name = "AutoFarmBodyVelocity"
                    bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)  -- Fuerza solo en la dirección Y (vertical)
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)  -- Mantener al personaje en el mismo lugar verticalmente
                    bodyVelocity.Parent = humanoidRootPart
                end

                for _, mob in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                    if mob.Name:lower() == SelectedMob:lower() and player.Character and humanoidRootPart and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                        repeat
                            quest()
                            player.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            wait()
                            events.p:FireServer("Blacknwhite27", 1)
                        until not getgenv().AutoFarm or not mob or mob.Humanoid.Health <= 0
                    end
                end
            end)
        else
            -- Eliminar BodyVelocity cuando AutoFarm está desactivado
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local existingVelocity = player.Character.HumanoidRootPart:FindFirstChild("AutoFarmBodyVelocity")
                if existingVelocity then
                    existingVelocity:Destroy()
                end
            end
        end
    end
end)
