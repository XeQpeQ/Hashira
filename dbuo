local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local events = replicatedStorage.Package.Events
local runService = game:GetService("RunService")
local data = replicatedStorage.Datas[player.UserId]
local skills = replicatedStorage.Package.Skills
local market = game:GetService("MarketplaceService")

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly", "X Fighter Trainer",
    "Super Vegetable", "Klirin", "SSJ2 Wukong", "Perfect Atom", "Radish", "Mapa",
    "Broccoli", "SSJG Kakata", "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local MobTable = {}
local mobNamesAdded = {}

-- Llenar MobTable con nombres únicos de mobs
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not player:FindFirstChild(mob.Name) and not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Roblox-UI-Libs/main/1%20Tokyo%20Lib%20(FIXED)/Tokyo%20Lib%20Source.lua"))({
    cheatname = "Hashira Hub", -- watermark text
    gamename = game.PlaceId, -- watermark text
})

library:init()

local Window1  = library.NewWindow({
    title = "Hashira Hub",
    size = UDim2.new(0, 510, 0.6, 6
)})

local Tab1 = Window1:AddTab("  MainTab  ")
local SettingsTab = library:CreateSettingsTab(Window1)
local Section1 = Tab1:AddSection("Section 1", 1)

Section1:AddToggle({
    text = "AutoFarm",
    state = false,
    risky = false,
    tooltip = "tooltip1",
    flag = "Toggle_1",
    risky = false,
    callback = function(v)
        getgenv().AutoFarm = v
    end

Section1:AddList({
    enabled = true,
    text = "Select Mob", 
    tooltip = "tooltip1",
    selected = "",
    multi = false,
    open = false,
    max = 4,
    values = MobTable,
    risky = false,
    callback = function(v)
        SelectedMob = v
    end
})

Section1:AddList({
    enabled = true,
    text = "Select Quest", 
    tooltip = "tooltip1",
    selected = "",
    multi = false,
    open = false,
    max = 4,
    values = Quest,
    risky = false,
    callback = function(v)
        SelectedQuest = v
    end
})

-- Función de búsqueda de Quest
local function quest()
    if replicatedStorage.Datas[player.UserId].Quest.Value ~= SelectedQuest then
        local questNPC = game:GetService("Workspace").Others.NPCs:FindFirstChild(SelectedQuest)
        if questNPC then
            player.Character.HumanoidRootPart.CFrame = questNPC.HumanoidRootPart.CFrame
            repeat
                wait()
                events.Qaction:InvokeServer(questNPC)
            until replicatedStorage.Datas[player.UserId].Quest.Value == SelectedQuest
        end
    end
end

-- Bucle para activar el AutoFarm
task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            pcall(function()
                for _, mob in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                    if mob.Name:lower() == SelectedMob:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                        repeat
                            quest()
                            player.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            wait()
                            events.p:FireServer("Blacknwhite27", 1)
                        until not getgenv().AutoFarm or not mob or mob.Humanoid.Health <= 0
                    end
                end
            end)
        end
    end
end)
