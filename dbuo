local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local events = replicatedStorage.Package.Events
local runService = game:GetService("RunService")
local data = replicatedStorage.Datas[player.UserId]
local skills = replicatedStorage.Package.Skills
local market = game:GetService("MarketplaceService")

-- Cargar Tokyo Lib
local TokyoLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/drillygzzly/Roblox-UI-Libs/main/1%20Tokyo%20Lib%20(FIXED)/Tokyo%20Lib%20Source.lua'))()

local Quest = {
    "Top X Fighter", "SSJB Wukong", "Citizen", "Kid Nohag", "Chilly", "X Fighter Trainer",
    "Super Vegetable", "Klirin", "SSJ2 Wukong", "Perfect Atom", "Radish", "Mapa",
    "Broccoli", "SSJG Kakata", "Kai-fist Master", "Kaio Student", "Turtle Student"
}

local MobTable = {}
local mobNamesAdded = {}

-- Llenar MobTable con nombres únicos de mobs
for _, mob in pairs(game:GetService("Workspace").Living:GetChildren()) do
    if not player:FindFirstChild(mob.Name) and not mobNamesAdded[mob.Name] then
        table.insert(MobTable, mob.Name)
        mobNamesAdded[mob.Name] = true
    end
end

-- Crear la ventana de Tokyo Lib
local Window = TokyoLib:CreateWindow("Big Hub")

local MainTab = Window:CreateTab("MainTab")

local AutoFarmToggle = MainTab:CreateToggle({
    Name = "AutoFarm",
    Default = false,
    Callback = function(Value)
        getgenv().AutoFarm = Value
    end,
})

local SelectedMob = "None"
local MobDropdown = MainTab:CreateDropdown({
    Name = "Select Mob",
    Options = MobTable,
    Default = SelectedMob,
    Callback = function(Option)
        SelectedMob = Option
    end,
})

local SelectedQuest = "None"
local QuestDropdown = MainTab:CreateDropdown({
    Name = "Select Quest",
    Options = Quest,
    Default = SelectedQuest,
    Callback = function(Option)
        SelectedQuest = Option
    end,
})

-- Función de búsqueda de Quest
local function quest()
    if replicatedStorage.Datas[player.UserId].Quest.Value ~= SelectedQuest then
        local questNPC = game:GetService("Workspace").Others.NPCs:FindFirstChild(SelectedQuest)
        if questNPC then
            player.Character.HumanoidRootPart.CFrame = questNPC.HumanoidRootPart.CFrame
            repeat
                wait()
                events.Qaction:InvokeServer(questNPC)
            until replicatedStorage.Datas[player.UserId].Quest.Value == SelectedQuest
        end
    end
end

-- Bucle para activar el AutoFarm
task.spawn(function()
    while task.wait() do
        if getgenv().AutoFarm then
            pcall(function()
                for _, mob in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                    if mob.Name:lower() == SelectedMob:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                        repeat
                            quest()
                            player.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                            wait()
                            events.p:FireServer("Blacknwhite27", 1)
                        until not getgenv().AutoFarm or not mob or mob.Humanoid.Health <= 0
                    end
                end
            end)
        end
    end
end)
