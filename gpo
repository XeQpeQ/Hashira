hookfunction(game:GetService("Players").LocalPlayer.PlayerScripts.ClientMain.GetPropertyChangedSignal, function()
	return
end)

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local gui, mainFrame, originalSize, isExpanded

local function toggleGUIVisibility(visible)
    if gui then
        gui.Enabled = visible
    end
end

local function toggleGUISize(expand)
    if mainFrame and originalSize then
        if expand then
            mainFrame.Size = originalSize
        else
            mainFrame.Size = UDim2.new(0, 150, 0, 100) -- Modifica el tamaño según sea necesario
        end
        isExpanded = expand
    end
end

local bb = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
    ab.Text = "Roblox intentó expulsarte, pero lo evité"
    wait(2)
    ab.Text = "Estado: Activo"
end)

local HashiraUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/XeQpeQ/Hashira/main/UI2.lua"))()
local win = HashiraUI:Create({
    Name = "Hashira Hub",
    StartupSound = {
        Toggle = false,
        SoundID = "rbxassetid://6958727243",
        TimePosition = 1
    }
})

local LP = game.Players.LocalPlayer
local client = game.Players.LocalPlayer
local FarmMethod = "Above"
local tweenspeed = 50
local Distance = 18

-- Define local function GetDistance to calculate distance between player and endpoint
local function GetDistance(Endpoint)
    if typeof(Endpoint) == "Instance" or typeof(Endpoint) == "CFrame" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    end
    local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    return Magnitude
end

-- Define local function Tween to handle tweening
local function Tween(Endpoint)
    if typeof(Endpoint) == "Instance" then
        Endpoint = Endpoint.CFrame
    end
    local TweenFunc = {}
    local Distance = GetDistance(Endpoint)
    local TweenInfo = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance / tweenspeed, Enum.EasingStyle.Linear), {CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1, 0, 0), math.rad(0))})
    TweenInfo:Play()
    function TweenFunc:Cancel()
        TweenInfo:Cancel()
        return false
    end
    if Distance <= 5 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
        TweenInfo:Cancel()
        return false
    end
    return TweenFunc
end

-- Define a task to handle farming methods
task.spawn(function()
    while wait() do
        pcall(function()
            -- Define farming methods based on FarmMethod value
            if FarmMethod == "Above" then
                FarmModes = CFrame.new(0,Distance,0) * CFrame.Angles(math.rad(-90),0,0) 
            elseif FarmMethod == "Below" then
                FarmModes = CFrame.new(0,-Distance,0) * CFrame.Angles(math.rad(90),0,0)
            elseif FarmMethod == "Behind" then
                FarmModes = CFrame.new(0,0,Distance)
            elseif FarmMethod == "Ahead" then
                FarmModes = CFrame.new(0, 0, -Distance)
                local rotation = CFrame.Angles(0, math.rad(180), 0)
                FarmModes = FarmModes * rotation
            end
        end)
    end
end)

-- Define GUI tabs
local AutoFarm = win:Tab('AutoFarm')
local uitab = win:Tab('UI')

-- Define a button to destroy GUI
uitab:Button('Destroy GUI', function()
    win:Exit()
end)

-- Define a toggle for Auto Bandit
AutoFarm:Toggle('Auto Bandit', function(v)
    getgenv().AutoBandit = v
end)

-- Define a button for No Stamina
AutoFarm:Button('No Stamina', function()
     local Namecall
    Namecall = hookmetamethod(game, '__namecall', function(self, ...)
        local Args = {...}
        local method = getnamecallmethod()

        if method == 'FireServer' and self.Name == 'takestam' then 
            return nil
        end 

        return Namecall(self, ...)
    end)
end)

-- Define AutoFarm function for bandit farming
spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().AutoBandit then
                local bandit = game:GetService("Workspace").NPCs.Bandit
                if bandit and bandit.HumanoidRootPart then
                    if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        antifall3 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                        antifall3.Velocity = Vector3.new(0, 0, 0)
                        antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                    elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        for i, v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
                            if v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Name:match("Bandit") and not v.Name:match("Bandit Boss") then
                                if v.Humanoid.Health > 0 then
                                    local distance = GetDistance(v:GetModelCFrame() * FarmModes)
                                    repeat
                                        task.wait()
                                        if distance < 25 and distance < 150 then
                                            if TweenFa then
                                                TweenFa:Cancel()
                                                wait(.1)
                                            end
                                            LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame()
                                        else
                                            TweenFa = Tween(v:GetModelCFrame() * FarmModes)
                                        end
                                        if v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and distance < 10 then
                                            NearestMobs = true
                                        elseif v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") and distance > 10 then
                                            NearestMobs = false
                                        end
                                    until not getgenv().AutoBandit or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
                                    NearestMobs = false
                                end
                            end
                        end
                    end
                end
            end
            if getgenv().AutoBandit == false then
                TweenFa:Cancel()
            end
            if bandit and bandit.Humanoid.Health == 0 then
                bandit:Destroy()
            end
        end)
    end
end)
spawn(function()
    while wait() do
        if getgenv().AutoBandit then
            local args = {
                [1] = {
                    [1] = "takequest",
                    [2] = "Help Raphtalia"
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Quest"):InvokeServer(unpack(args))

            local args = {
                [1] = {
                    [1] = "damage",
                    [2] = {
                        [1] = workspace:WaitForChild("NPCs"):WaitForChild("Bandit"):WaitForChild("HumanoidRootPart")
                    },
                    [3] = "Melee",
                    [4] = {
                        [1] = 1,
                        [2] = "Ground",
                        [3] = "Melee"
                    },
                    [5] = true,
                    [6] = CFrame.new(workspace:WaitForChild("NPCs"):WaitForChild("Bandit"):WaitForChild("HumanoidRootPart").Position),
                    ["aircombo"] = "Ground"
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CombatRegister"):InvokeServer(unpack(args))

            local Player = game:GetService("Players").LocalPlayer
            pcall(function()
                if Player.Backpack:FindFirstChild("Melee") and Player.Character:FindFirstChild("Melee") == nil then
                    local tool = Player.Backpack:FindFirstChild("Melee")
                    Player.Character.Humanoid:EquipTool(tool)
                end
            end)
        end
    end
end)
